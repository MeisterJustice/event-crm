let User,Blog,Event,Email,Donate;_66a‍.x([["getAdmin",()=>getAdmin],["getBlog",()=>getBlog],["getUser",()=>getUser],["getCreateBlog",()=>getCreateBlog],["postBlog",()=>postBlog],["getEvent",()=>getEvent],["getCreateEvent",()=>getCreateEvent],["postEvent",()=>postEvent],["getEditBlog",()=>getEditBlog],["putBlog",()=>putBlog],["deleteBlog",()=>deleteBlog],["getEditEvent",()=>getEditEvent],["putEvent",()=>putEvent],["deleteEvent",()=>deleteEvent]]);_66a‍.w("../models/user",[["default",["User"],function(v){User=v}]]);_66a‍.w("../models/blog",[["default",["Blog"],function(v){Blog=v}]]);_66a‍.w("../models/event",[["default",["Event"],function(v){Event=v}]]);_66a‍.w("../models/email-signup",[["default",["Email"],function(v){Email=v}]]);_66a‍.w("../models/donate",[["default",["Donate"],function(v){Donate=v}]]);





       const getAdmin = async (req, res, next) => {
    let users = await User.find({});
    let blogs = await Blog.find({});
    let events = await Event.find({});
    let emails = await Email.find({});
    let donate = await Donate.find({});
    res.render("admin/index", {
        users,
        blogs,
        events,
        emails,
        donate
    }); 
}

       const getBlog = async (req, res, next) => {
    let blogs = await Blog.find({});
    res.render("admin/blog/index", {
        blogs
    });
}

       const getUser = async (req, res, next) => {
    let users = await User.find({});
    let emails = await Email.find({});
    res.render("admin/user", {
        users,
        emails
    });
}

       const getCreateBlog = async (req, res, next) => {
    res.render("admin/blog/new");
}

       const postBlog = async (req, res, next) => {
    let author = await {
        id: req.user._id,
        username: req.user.username
    }

    req.body.author = author;    

    await Blog.create(req.body);
    res.redirect("/admin/blog");
}

       const getEvent = async (req, res, next) => {
    let events = await Event.find({});
    res.render("admin/event/index", {
        events
    });
}

       const getCreateEvent = async (req, res, next) => {
    res.render("admin/event/new")
}

       const postEvent = async (req, res, next) => {
    let author = await {
        id: req.user._id,
        username: req.user.username
    }

    req.body.author = author;
    let createEvent = await Event.create(req.body);
    res.redirect("/admin/event");
}

       const getEditBlog = async (req, res, next) => {
    let blog = await Blog.findById(req.params.blog_id);
    res.render("admin/blog/edit", {blog});
}

       const putBlog = async (req, res, next) => {
    let editBlog = await Blog.findByIdAndUpdate(req.params.blog_id, req.body);
    res.redirect("/admin/blog");
}

       const deleteBlog = async (req, res, next) => {
    let deleteBlog = await Blog.findByIdAndDelete(req.params.blog_id)
    res.redirect("/admin/blog");
}

       const getEditEvent = async (req, res, next) => {
    let event = await Event.findById(req.params.event_id);
    res.render("admin/event/edit", {event})
}

       const putEvent = async (req, res, next) => {
    let editEvent = await Event.findByIdAndUpdate(req.params.event_id, req.body);
    res.redirect("/admin/event");
}

       const deleteEvent = async (req, res, next) => {
    let deleteEvent = await Event.findByIdAndDelete(req.params.event_id)
    res.redirect("/admin/event");
}